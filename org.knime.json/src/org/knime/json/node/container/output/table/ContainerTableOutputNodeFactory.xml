<?xml version="1.0" encoding="UTF-8"?>
<knimeNode icon="./service-out.png" type="Container"
	xmlns="http://knime.org/node/v4.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://knime.org/node/v4.1 http://knime.org/node/v4.1.xsd">
	<name>Container Output (Table)</name>

	<shortDescription>
		Reads the content of a table and makes it available to an external caller (e.g a Call Workflow node).
    </shortDescription>

	<fullDescription>
		<intro>
		
			This node sends a KNIME table to an external caller (i.e. the <i>Call Workflow (Table Based)</i> node).
			A configured parameter makes the <i>Container Output (Table)</i> visible from the external caller and enables 
			the external caller to fetch a KNIME table from the <i>Container Output (Table)</i> node.<br/>
			<br/>
		
			If a data table is connected to the input port, the node will simply forward this table to the output port. 
		</intro>

        <option name="Parameter name">
            A name for the output parameter(preferably unique). This name is exposed in the REST interface and in the
            <i>Call Workflow (Table Based)</i> node.
        </option>

        <option name="Use fully qualified name in REST representation">
        	If checked, the name set above will be amended by the node's ID to guarantee unique parameter names. Usually
        	it's a good idea to have this box <i>not</i> checked and instead make sure to use meaningful and unique
        	names in all container nodes present in a workflow.
        </option>

        <option name="Description">
            A description for the output parameter. The description is shown in the API specification of the REST
            interface. 
        </option>
	</fullDescription>

	<ports>
		<inPort index="0" name="Any input table">
			Table which defines the output of the workflow.
		</inPort>
	
		<outPort index="0" name="The forwarded input table">
			The input table directly forwarded without changes.
		</outPort>
	</ports>
</knimeNode>
