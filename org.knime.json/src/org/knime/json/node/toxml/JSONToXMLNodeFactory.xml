<?xml version="1.0" encoding="UTF-8"?>
<knimeNode icon="./json2xml.png" type="Manipulator" xmlns="http://knime.org/node/v2.8" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://knime.org/node/v2.8 http://knime.org/node/v2.8.xsd">
    <name>JSON To XML</name>
    
    <shortDescription>
        Converts JSON values to XML documents.
    </shortDescription>
    
    <fullDescription>
        <intro><p>Converts JSON values to XML documents.</p>
        <p>The json values might contain multiple objects/values which case those cannot be represented using XML without an artificial root node.
        For handling this case, you can create arrays of XML documents.
        </p>
        </intro>
        
        
        <tab name="Standard Options">
        <option name="Input column">Column containing JSON values</option>
        <option name="Replace input column">Replace input column, keep its name</option>
        <option name="Append new column">Name of the new (XML) column</option>
        <option name="Specify namespace">If unchecked, no base namespace will be set.</option>
        <option name="Namespace">The base namespace</option>
        <option name="Omit type information">When checked, the JSON type information will not be provided, numbers, booleans, ... will be represented as text. If checked, these will be prefixed with the prefixes specified on the <u>Namespace/prefix</u> tab.</option>
        <option name="Root element name">There is always a root element, you can specify its name.</option>
        <option name="Array item name">Array items not always can be represented as trees (for example arrays within arrays, or primitive types within arrays), in that case an element will be created with this name for each array item.</option>
        </tab>
        <tab name="Namespace/prefix">
        <option name="Empty list">Only used for the <tt>[]</tt> JSON array when the <u>Omit type information</u> is unchecked. Otherwise it is not possible to distinguish between <tt>[]</tt> and <tt>{}</tt>.</option>
        <option name="Binary content">Prefix for the binary contents.</option>
        <option name="Boolean">Prefix for the boolean values.</option>
        <option name="Decimal">Prefix for the floating point/decimal values.</option>
        <option name="Integer">Prefix for the integer values.</option>
        <option name="Null">Prefix for the null values.</option>
        <option name="String">Prefix for the String/text values.</option>
        </tab>
    </fullDescription>
    
    <ports>
        <inPort index="0" name="table with JSON">A table with JSON column</inPort>
        <!-- possibly more input ports here-->
        <outPort index="0" name="table with XML">Table with the converted XML column</outPort>
        <!-- possibly more output ports here-->
    </ports>    
</knimeNode>
