<?xml version="1.0" encoding="UTF-8"?>
<knimeNode icon="./tabletojson.png" type="Manipulator" xmlns="http://knime.org/node/v2.10" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://knime.org/node/v2.10 http://knime.org/node/v2.10.xsd">
    <name>Table to JSON</name>
    
    <shortDescription>
        Converts some columns of a table to a single JSON cell.
    </shortDescription>
    
    <fullDescription>
        <intro>Converts the selected columns content to a JSON value row-wise or column-wise. It also have an option to "undo" -with some limitations- the JSON to Table transformation and create JSON values for each row based on the column names.<br/>
        Example input table:
<table>
<tr><th>a.b</th><th>a.c</th><th>d</th></tr>
<tr><td>b0</td><td>c0</td><td>d0</td></tr>
<tr><td>b1</td><td>c1</td><td>d1</td></tr>
</table>
        With the different parameters, the following JSON values are generated:<br/>
        <b>Row-oriented</b>
<pre>
[ {
  "a.b" : "b0",
  "a.c" : "c0",
  "d" : "d0"
}, {
  "a.b" : "b1",
  "a.c" : "c1",
  "d" : "d1"
} ]
</pre>
        <b>Column-oriented</b> (with Row keys as JSON value with key: "ROWID"):
<pre>
{
  "ROWID" : [ "Row0", "Row1" ],
  "a.b" : [ "b0", "b1" ],
  "a.c" : [ "c0", "c1" ],
  "d" : [ "d0", "d1" ]
}</pre>
        <b>Keep rows</b> (with <b>Column names as paths</b>, separator: <tt>.</tt>):
<pre>
{
  "a" : {
    "b" : "b0",
    "c" : "c0"
  },
  "d" : "d0"
}</pre>
<pre>
{
  "a" : {
    "b" : "b1",
    "c" : "c1"
  },
  "d" : "d1"
}</pre>
        </intro>
        
        <option name="Input columns">The selected columns will be transformed.</option>
        <option name="Row keys|Omit row key">The row keys will be omitted, not used in the generated JSON value (which are arrays when the rows are not kept).</option>
        <option name="Row keys|Row key as JSON key">The row keys are added to the generated JSON value as a key, in this case not an array, but an object is created.</option>
        <option name="Row keys|Row key as JSON value with key">The row keys will be included in the generated JSON (array) value with the specified key.</option>
        <option name="Row-oriented">the values from the selected columns are collected and concatenated row-wise to a JSON object/array, after that these are combined by the rows to a single JSON value.</option>
        <option name="Column-oriented">the values from the selected columns are collected and concatenated column-wise to a JSON object/array, after that these are combined by the columns to a single JSON value.</option>
        <option name="Keep rows">the selected columns are combined to a new JSON column containing the values from the columns and the name of the columns as keys. This option does not combine the rows of the input table.</option>
        <option name="Remove source columns">When checked, the source columns are removed when the rows are kept. It has no effect for the other <b>Aggregation direction</b> options, when all columns are removed.</option>
        <option name="Column names as paths, where path separator in column names">When <i>From column names as path</i> is selected, this value will be used to find the keys for JSON columns based on the column names.</option>
        <option name="Missing values are: omitted">Missing values from the input table do not generate their key.</option>
        <option name="Missing values are: null">Missing values from the input table are <tt>null</tt>.</option>
        <option name="Output column name">Name of the resulting column.</option>
    </fullDescription>
    
    <ports>
        <inPort index="0" name="Table">A datatable</inPort>
        <outPort index="0" name="JSON">Table containing the JSON column</outPort>
    </ports>    
</knimeNode>
