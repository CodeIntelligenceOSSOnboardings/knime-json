<?xml version="1.0" encoding="UTF-8"?>
<knimeNode icon="./rowcombine.png" type="Manipulator" xmlns="http://knime.org/node/v2.10" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://knime.org/node/v2.10 http://knime.org/node/v2.10.xsd">
    <name>JSON Row Combiner</name>
    
    <shortDescription>
        Appends JSON values in the rows to a single JSON value.
    </shortDescription>
    
    <fullDescription>
        <intro>Combines JSON values in a column to a single JSON value (with an array for the JSON values from the column). The output looks like this:<br/>
<pre>{
  "JSON key": [
    {"json":"from Row1"},
    {"json":"from Row2"}
  ],
  "custom key":"custom value"
}</pre> where the <tt>JSON key</tt> can be specified with the <i>Add root object with key</i> parameter, the <tt>"custom key":"custom value"</tt> is specified with the <i>Custom key/value pairs</i> and the <tt>Collect into array</tt> options.<br/>
All columns and rows will be removed or collapsed to a single cell.
        </intro>
        
        <option name="JSON column">The JSON column providing the values for the array.</option>
        <option name="New column name">Name of the new (single, JSON) column in the output table.</option>
        <option name="Omit root">When selected, only the object or the array is returned (custom key/value pairs are not applicable).</option>
        <option name="Add root object with key">Key to the JSON values object or array in the root object.</option>
        <option name="Custom key/value pairs">Additional key/value pairs to the root object.</option>
        <option name="Collect into array">The rows are collected to a JSON array.</option>
        <option name="Collect into object with key">The rows become an object within another object with the keys specified by the selected column's values (will fail if there are duplicates).</option>
    </fullDescription>
    
    <ports>
        <inPort index="0" name="Table with JSON">Table with a JSON column</inPort>
        <outPort index="0" name="JSON value">A single JSON value</outPort>
    </ports>    
</knimeNode>
