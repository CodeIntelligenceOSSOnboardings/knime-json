<?xml version="1.0" encoding="UTF-8"?>
<knimeNode icon="./rowcombinewrite.png" type="Sink" xmlns="http://knime.org/node/v2.10" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://knime.org/node/v2.10 http://knime.org/node/v2.10.xsd">
    <name>JSON Row Combiner and Writer</name>
    
    <shortDescription>
        Combines the values from a JSON column to a single JSON file.
    </shortDescription>
    
    <fullDescription>
        <intro>All of the values in the JSON column will be transformed to a JSON array with "<i>JSON key</i>" key complemented by the custom key/value pairs, or just the array if the option <b>Omit root</b> is selected. (The JSON content in the file can be pretty-printed.) The output looks like this:<br/>
<pre>{
  "JSON key": [
    {"json":"from Row1"},
    {"json":"from Row2"}
  ],
  "custom key":"custom value"
}</pre> where the <tt>JSON key</tt> can be specified with the <i>Add root object with key</i> parameter, the <tt>"custom key":"custom value"</tt> is specified by the <i>Custom key/value pairs</i> and the <tt>Collect into array</tt> options.</intro>
        
        <option name="JSON column">The JSON column providing the values for the root key.</option>
        <option name="Output file">Location to save the file (can also be a remote URL).</option>
        <option name="Overwrite existing file">When checked, existing files might be overwritten.</option>
        <option name="Pretty print">When checked, each level of the JSON value will be indented, multiple lines are created, else a dense format is written.</option>
        <option name="Omit root">When selected, only the object or the array is returned (custom key/value pairs are not applicable).</option>
        <option name="Add root object with key">Key to the JSON values object or array in the root object.</option>
        <option name="Custom key/value pairs">Additional key/value pairs to the root object (not applicable when no root should be created).</option>
        <option name="Collect into array">The rows are collected to a JSON array.</option>
        <option name="Collect into object with key">The rows become an object within another object with the keys specified by the selected column's values (will fail if there are duplicates).</option>
        <!-- possibly more options that can also be grouped by tabs -->
        <!--
        <tab name="Standard Options">
            <option name="short name of first option (like in the dialog)">description of first option</option>
            <option name="short name of second option (like in the dialog)">description of second option</option>
        </tab>
        <tab name="Advanced Options">
            <option name="short name of first advanced option (like in the dialog)">description of first advanced option</option>
        </tab>
        -->
    </fullDescription>
    
    <ports>
        <inPort index="0" name="Table with JSON">Table with a JSON column</inPort>
        <!-- possibly more input ports here-->
        <!-- outPort index="0" name="Out-Port name">Description of first output port...</outPort-->
        <!-- possibly more output ports here-->
    </ports>    
</knimeNode>
